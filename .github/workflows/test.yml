name: test
on:
  pull_request:
  push:
    branches:
      - main

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - uses: actions/setup-python@39cd14951b08e74b54015e9e001cdefcf80e669f # v5.1.1
      - uses: pre-commit/action@2c7b3805fd2a0fd8c1884dcaebf91fc102a13ecd # v3.0.1

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ["3.8", "3.10", "3.12", "3.13"]
        resolver: [mamba, conda, micromamba]
        micromamba-version: ["1.5.10-0", "latest"]
        mamba-version: ["mamba=1.5.10", "mamba"]
        exclude:
          - resolver: mamba
            micromamba-version: "1.5.10-0"
          - resolver: conda
            micromamba-version: "1.5.10-0"
          - resolver: conda
            mamba-version: "mamba=1.5.10"
          - resolver: micromamba
            mamba-version: "mamba=1.5.10"
          - python-version: "3.8"
            mamba-version: "mamba=1.5.10"
          - python-version: "3.13"
            mamba-version: "mamba=1.5.10"
    env:
      METAFLOW_CONDA_DEPENDENCY_RESOLVER: ${{ matrix.resolver }}
      METAFLOW_CONDA_TEST: 1
      METAFLOW_DATASTORE_SYSROOT_LOCAL: .metaflow
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - uses: mamba-org/setup-micromamba@b09ef9b599704322748535812ca03efb2625677b # v2.0.5
        with:
          micromamba-version: ${{ matrix.micromamba-version }}
          environment-file: dev-env.yml
          init-shell: bash
          post-cleanup: all
          condarc: |
            channels:
              - conda-forge
            channel_alias: https://prefix.dev
          create-args: >-
            python=${{ matrix.python-version }}
            ${{ matrix.mamba-version }}
      - name: install nflx-extension
        shell: bash -eo pipefail -l {0}
        run: |
          which pip
          pip install -e . --force-reinstall -U

      - name: install bash
        if: runner.os == 'macOS'
        run: brew install bash

      - name: run test
        shell: bash -eo pipefail -l {0}
        run: |
          set -x
          which pytest
          mkdir .metaflow
          pytest -n 4 tests
